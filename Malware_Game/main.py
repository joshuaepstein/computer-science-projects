import random
import pygame
from malware import Malware
from AssetsLibrary import backgrounds
from decoder import Decoder

# pygame setup
pygame.init()
screen = pygame.display.set_mode((1280, 720))
pygame.display.set_caption("The Malware Game")
pygame.display.set_icon(pygame.image.load("assets/icon.png"))
pygame.mouse.set_visible(False)

clock = pygame.time.Clock()
running = True
lastClickedKeybind = "None"
malwares = []
cpuHealth = 100
level = 1
decoders = []
points = 0

def chanceOfSpawningMalware():
    return level / 100


def shouldSpawnMalware():
    return random.random() < chanceOfSpawningMalware()


def checkIfAndSpawnMalware():
    if shouldSpawnMalware():
        malwares.append(Malware(151, 675, screen))


def drawSidebar():
    sidebarWidth = screen.get_width() / 4
    sidebarHeight = screen.get_height()
    sidebar = pygame.Rect(screen.get_width() - sidebarWidth,
                          0, sidebarWidth, sidebarHeight)
    sidebarColor = pygame.Color("black")
    pygame.draw.rect(screen, sidebarColor, sidebar)

    pygame.font.init()
    font = pygame.font.SysFont('Arial', 30)
    text = font.render("CPU Health: " + str(cpuHealth) +
                       "%", False, (255, 255, 255))
    screen.blit(text, (sidebar.x + 20, sidebar.y + 20))

    levelFont = pygame.font.SysFont("Arial", 25)
    subtitle = pygame.font.SysFont("Arial", 20)
    levelText = levelFont.render("Level " + str(level), False, (255, 255, 255))
    screen.blit(levelText, (sidebar.x + 20, sidebar.y + 60))

    selectYourDecoderText = subtitle.render(
        "Select Your Decoder", False, (200, 200, 200))
    screen.blit(selectYourDecoderText, (sidebar.x + 20, sidebar.y + 90))

    decoderOpacity = len(decoders) >= 5 and 100 or 255
    decoderPath = "assets/decoder.png"
    decoderImage = pygame.image.load(decoderPath)
    decoderImage = pygame.transform.scale(decoderImage, (50, 50))
    decoderImage.set_alpha(decoderOpacity)
    screen.blit(decoderImage, (sidebar.x + 20, sidebar.y + 110))

    # display points at bottom of sidebar in gold
    pointsFont = pygame.font.SysFont("Arial", 25)
    pointsText = pointsFont.render("Points: " + str(points), False, (255, 255, 255))
    screen.blit(pointsText, (sidebar.x + 20, sidebarHeight - 40))


cursorPosition = [0, 0]
clickedDecoder = False
alert = {
    "time": 0,
    "message": ""
}
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        elif event.type == pygame.KEYDOWN:
            lastClickedKeybind = pygame.key.name(event.key)

    checkIfAndSpawnMalware()

    screen.fill("white")
    if cpuHealth <= 0:
        cpuHealth = 0
        running = False

    current_background = backgrounds[cpuHealth // 20 * 20]
    screen.blit(pygame.image.load(current_background), (0, 0))

    drawSidebar()

    for malware in malwares:
        malware.draw()
        malware.move()
        if malware.y < -20:
            malware.remove()
            cpuHealth -= 1
            malwares.remove(malware)

    for decoder in decoders:
        decoder.shoot(malwares)
        decoder.draw()

    mousePosition = pygame.Vector2(pygame.mouse.get_pos())
    for malware in malwares:
        if malware.getRect().collidepoint(mousePosition):
            malware.remove()
            malwares.remove(malware)

    # to render over everything else
    for event in pygame.event.get():
        if event.type == pygame.MOUSEMOTION:
            cursorPosition = event.pos
        elif event.type == pygame.MOUSEBUTTONDOWN:
            if len(decoders) < 5:
                if clickedDecoder:
                    clickedDecoder = False
                    decoders.append(
                        Decoder(cursorPosition[0] - 25, cursorPosition[1] - 25, screen, level))
                if pygame.Rect(screen.get_width() - screen.get_width() / 4 + 20, 110, 50, 50).collidepoint(event.pos):
                    clickedDecoder = True
            elif pygame.Rect(screen.get_width() - screen.get_width() / 4 + 20, 110, 50, 50).collidepoint(event.pos):
                alert = {
                    "time": 60 * 3,
                    "message": "You can only have 5 decoders!"
                }

    if not clickedDecoder:
        cursorPath = "assets/cursor.png"  # w=12 h=19
        cursorImage = pygame.image.load(cursorPath)
        cursorImage = pygame.transform.scale(cursorImage, (12, 19))
        screen.blit(cursorImage, (cursorPosition[0], cursorPosition[1]))
    else:
        cursorPath = "assets/decoder.png"
        cursorImage = pygame.image.load(cursorPath)
        cursorImage = pygame.transform.scale(cursorImage, (50, 50))
        screen.blit(
            cursorImage, (cursorPosition[0] - 25, cursorPosition[1] - 25))

    if alert["time"] > 0:
        alert["time"] -= 1
        alertFont = pygame.font.SysFont("Arial", 20)
        alertText = alertFont.render(alert["message"], False, (255, 255, 255))
        screen.blit(alertText, (screen.get_width() -
                    screen.get_width() / 4 + 20, 170))

    # flip() the display to put your work on screen
    pygame.display.flip()

    clock.tick(60)  # limits FPS to 60

pygame.quit()
